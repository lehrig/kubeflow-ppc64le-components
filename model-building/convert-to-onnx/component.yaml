name: Convert Model to ONNX
description: 'Converts a model to ONNX format. Supported input formats: Keras.'
inputs:
- {name: model_dir, type: String}
outputs:
- {name: onnx_model_dir, type: String}
implementation:
  container:
    image: quay.io/ibm/kubeflow-notebook-image-ppc64le:latest
    command:
    - sh
    - -ec
    - |
      program_path=$(mktemp)
      printf "%s" "$0" > "$program_path"
      python3 -u "$program_path" "$@"
    - |
      def _make_parent_dirs_and_return_path(file_path: str):
          import os
          os.makedirs(os.path.dirname(file_path), exist_ok=True)
          return file_path

      def Convert_Model_to_ONNX(model_dir, onnx_model_dir):
          """Converts a model to ONNX format. Supported input formats: Keras."""

          import logging
          import onnx
          import sys
          import tensorflow as tf
          import tf2onnx

          logging.basicConfig(
              stream=sys.stdout,
              level=logging.INFO,
              format="%(levelname)s %(asctime)s: %(message)s",
          )
          logger = logging.getLogger()

          logger.info(f"Loading model from '{model_dir}'...")
          keras_model = tf.keras.models.load_model(model_dir)

          logger.info("Converting model to ONNX...")
          converted_model, _ = tf2onnx.convert.from_keras(keras_model)

          logger.info(f"Saving ONNX model to '{onnx_model_dir}'...")
          onnx.save_model(converted_model, onnx_model_dir)

          logger.info("Finished.")

      import argparse
      _parser = argparse.ArgumentParser(prog='Convert Model to ONNX', description='Converts a model to ONNX format. Supported input formats: Keras.')
      _parser.add_argument("--model-dir", dest="model_dir", type=str, required=True, default=argparse.SUPPRESS)
      _parser.add_argument("--onnx-model-dir", dest="onnx_model_dir", type=_make_parent_dirs_and_return_path, required=True, default=argparse.SUPPRESS)
      _parsed_args = vars(_parser.parse_args())

      _outputs = Convert_Model_to_ONNX(**_parsed_args)
    args:
    - --model-dir
    - {inputPath: model_dir}
    - --onnx-model-dir
    - {outputPath: onnx_model_dir}
